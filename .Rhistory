plot(Hwt,Height, xlab="Cat's Heart Weight (g)", ylab="Cat's Height (cm)", main="Scatter plot of Cat's Heart Weight v Cat's Height", pch=16)
#Plot regression line
abline(lm(Height~Hwt,data=cat_data),col='red')
#Scatter plot of Cat's Heart Weight v Cat's Age
plot(Hwt,Age, xlab="Cat's Heart Weight (g)", ylab="Cat's Age (years)", main="Scatter plot of Cat's Heart Weight v Cat's Age", pch=16)
#Plot regression line
abline(lm(Age~Hwt,data=cat_data),col='red')
#Scatter plot of Cat's Height v Cat's Age
plot(Height,Age, xlab="Cat's Height (cm)", ylab="Cat's Age (years)", main="Scatter plot of Cat's Height v Cat's Age", pch=16)
#Plot regression line
abline(lm(Age~Height,data=cat_data),col='red')
#Correlation Matrix
cor(cat_data[,c("Hwt","Bwt", "Height", "Age")])
panel.cor <- function(x, y, digits = 2, prefix = "",
cex.cor, ...)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- cor(x, y, use="complete.obs")
txt <- format(c(r, 0.123456789),
digits = digits)[1]
txt <- paste0(prefix, txt)
if(missing(cex.cor)) cex.cor <- 0.8/strwidth(txt)
text(0.5, 0.5, txt, cex = cex.cor * (abs(r)+0.15))
}
pairs(~Hwt+Bwt+Height+Age,cat_data, upper.panel = panel.smooth, lower.panel= panel.cor)
pairs(~Hwt+Bwt+Height+Age,cat_data, upper.panel = panel.smooth)
#Boxplot of Cat's Heart Weight by Sex
MaleHwt <- Hwt[Sex==1]
MaleHwt
summary(MaleHwt)
FemaleHwt <- Hwt[Sex==2]
FemaleHwt
summary(FemaleHwt)
boxplot(MaleHwt, FemaleHwt, names = c("Male Cat", "Female Cat"), main="Comparing Heart Weight's of Male and Female Cats", ylab="Heart Weight (g)", col=c(4,2))
#Boxplot of Cat's Heart Weight by Cat's Outdoor Categories
AlwaysHwt <- Hwt[Outdoor==1]
AlwaysHwt
summary(AlwaysHwt)
FreqHwt <- Hwt[Outdoor==2]
FreqHwt
summary(FreqHwt)
NeverHwt <- Hwt[Outdoor==3]
NeverHwt
summary(NeverHwt)
boxplot(AlwaysHwt, FreqHwt, NeverHwt, names = c("Always Outdoors", "Frequently Outdoors", "Never Outdoors"), main="Comparing Heart Weight's by Cat's Outdoor Categories", ylab="Heart Weight (g)", col=c(4,2,3))
res1 <- aov(Hwt~as.factor(Outdoor), data = cat_data)
par(mfrow=c(2,1))
plot(res1, which=1:2)
summary(res1)
boxplot(Hwt~Sex+Outdoor,data=cat_data, ylab="Heart Weight (g)")
print(boxplot(Hwt~Sex+Outdoor,data=cat_data, main="Comparing Heart Weight with Sex and Outdoor Status", xlab="Sex (1=Male, 2=Female) : Outdoor (1=Always, 2=Frequently, 3=Never)", ylab="Heart Weight (g)"))
#Interaction Plot
interaction.plot(x.factor = Sex,
trace.factor = Outdoor,
response = Hwt,
fun = mean, trace.label ="Outdoor",
type = "b", legend = TRUE,
main="Interaction Plot",xlab = "Sex", ylab="Heart Weight (g)",
pch=c(1,2),col=c(1,2))
res2<-aov(Hwt~as.factor(Outdoor)*as.factor(Sex),data=cat_data)
par(mfrow=c(2,1))
plot(res2, which=1:2)
plot(res2, which=4:5)
#Check if the data is balanced
addmargins(table(Outdoor,Sex))
#The data appears to be unbalanced as there is nearly twice as much males than females
Anova(res2, type = "2")
hist(Bwt)
#Cat's body weight does NOT appear to be symmetric.
hist(Height)
#Cat's height appears to be roughly symmetric and has a normal distribution.
hist(Age)
#Pearson
#H0: No Linear relationship between cat's heart weight and height, i.e. r_population correlation = 0
#H1: There is Linear relationship between cat's heart weight and height, i.e. r_population correlation != 0
cor.test(Hwt,Height)
#H0: No Linear relationship between cat's heart weight and age, i.e. r_population correlation = 0
#H1: There is Linear relationship between cat's heart weight and age, i.e. r_population correlation != 0
cor.test(Hwt,Age)
#Kendall
#Using Kendall method as seen from the histogram of body weight it appears that it is not normally distributed.
#H0: No Linear relationship between cat's heart weight and body weight, i.e. r_population correlation = 0
#H1: There is Linear relationship between cat's heart weight and body weight, i.e. r_population correlation != 0
cor.test(Hwt, Bwt, method = "kendall")
#MODEL1 = cat's heart weight and cat's body weight
#Treating cat's heart weight as response variable
plot(Hwt~Bwt)
#lm(y~x)
slr_Hwt_Bwt = lm(Hwt~Bwt)
slr_Hwt_Bwt
#Check Assumptions
plot(slr_Hwt_Bwt,which=1)
#Random scatter => iid assumption
#Spread is consistent => equal variance assumption
plot(slr_Hwt_Bwt,which=2)
#Straight line therefore residuals are normal. Meets normality assumption.
plot(slr_Hwt_Bwt,which=4)
plot(slr_Hwt_Bwt,which=5)
summary(slr_Hwt_Bwt)
plot(Hwt~Bwt)
abline(slr_Hwt_Bwt,col=2)
#MODEL2 = cat's heart weight and cat's height
#Treating cat's heart weight as response variable
plot(Hwt~Height)
#lm(y~x)
slr_Hwt_Height = lm(Hwt~Height)
slr_Hwt_Height
#Check Assumptions
plot(slr_Hwt_Height,which=1)
#Random scatter => iid assumption
#Spread is consistent => equal variance assumption
plot(slr_Hwt_Height,which=2)
#Straight line but there is a slight tail at the end, but we are happy enough with it to say that it meets our normality assumption.
plot(slr_Hwt_Height,which=4)
plot(slr_Hwt_Height,which=5)
summary(slr_Hwt_Height)
plot(Hwt~Height)
abline(slr_Hwt_Height,col=2)
#MODEL3 = cat's heart weight and cat's age
#Treating cat's heart weight as response variable
plot(Hwt~Age)
#lm(y~x)
slr_Hwt_Age = lm(Hwt~Age)
slr_Hwt_Age
#Check Assumptions
plot(slr_Hwt_Age,which=1)
#Random scatter => iid assumption
#Spread is consistent => equal variance assumption
plot(slr_Hwt_Age,which=2)
#Straight line therefore residuals are normal. Meets normality assumption.
plot(slr_Hwt_Age,which=4)
plot(slr_Hwt_Age,which=5)
summary(slr_Hwt_Age)
plot(Hwt~Age)
abline(slr_Hwt_Age,col=2)
lm1<-lm(Hwt~Bwt+Height+Age+as.factor(Sex)+as.factor(Outdoor),data=cat_data)
par(mfrow=c(2,1))
plot(lm1,which=1:2)
#Interpret Residuals vs Fitted
#The spread appears to be roughly the same so we are happy with our equal variance assumption.
#The scatter seems randomly distributed, so we are happy with our iid assumption.
#Interpret Normal Q-Q Plot
#The points fall in a straight line indicating that the residuals are normally distributed.
plot(lm1,which=4:5)
#No outliers or high leverage points
#There is no need to run variance inflation factor  as we have proven relationships between all variables and cat's heart weight
vif(lm1)
summary(lm1)
#Removing "Sex" as cat's sex seems to be less significant than all the other variables.
lm2<-lm(Hwt~Bwt+Height+Age+as.factor(Outdoor),data=cat_data)
par(mfrow=c(2,1))
plot(lm2,which=1:2)
#Interpret Residuals vs Fitted
#The spread appears to be roughly the same so we are happy with our equal variance assumption.
#The scatter seems randomly distributed, so we are happy with our iid assumption.
#Interpret Normal Q-Q Plot
#The points fall in a straight line indicating that the residuals are normally distributed.
plot(lm2,which=4:5)
#No outliers or high leverage points
#There is no need to run variance inflation factor  as we have proven relationships between all variables and cat's heart weight
vif(lm2)
summary(lm2)
#F-test
#H0: The second multiple linear regression model without sex is the preferred model
#H1: The first multiple linear regression model with sex is the preferred model
anova(lm2,lm1)
#As the p-value = 0.1449 which is greater than 0.05 we fail to reject the null hypothesis.
#We can conclude that the second multiple linear regression model without sex is the preferred model
AIC(lm1,lm2)
BIC(lm1,lm2)
#Likelihood Ratio Test
install.packages("lmtest")
install.packages("lmtest")
library(lmtest)
lrtest(lm2, lm1)
#Hwt = -0.55408 + 3.14320(Bwt) + 0.05610(Height) + 0.06310(Age) + 0.33512(Outdoor) + 1.06887(Outdoor)
AnsHwt1 = -0.55408 + (3.14320 * 2.6) + (0.05610 * 23.5) + (0.06310 * 10) + (0.33512 * 2) + (1.06887 * 0)
AnsHwt1
#ANS: 10.23783
AHwt1 <- 11.2
#Difference between actual and predicted cat's heart weight
Diff1 <- AHwt1-AnsHwt1
Diff1
AnsHwt2 = -0.55408 + (3.14320 * 3.1) + (0.05610 * 25.4) + (0.06310 * 13.2) + (0.33512 * 2) + (1.06887 * 0)
AnsHwt2
#ANS: 12.11794
AHwt2 <- 12.5
#Difference between actual and predicted cat's heart weight
Diff2 <- AHwt2-AnsHwt2
Diff2
#ANS = 0.38206
cat_data <- read.csv("~/Desktop/DataAnalytics2022/AdvancedStatisticsUsingR/CA1/cat_hwt.csv")
cat_data
typeof(cat_data)
summary(cat_data)
str(cat_data)
attach(cat_data)
install.packages("rmarkdown")
install.packages("rmarkdown")
library(stats)
library(car)
variables.names <- names(cat_data)
variables.names
#Scatter plot of Cat's Body Weight v Cat's Heart Weight
plot(Bwt,Hwt, xlab="Cat's Body Weight (kg)", ylab="Cat's Heart Weight (g)", main="Scatter plot of Cat's Body Weight v Cat's Heart Weight", pch=16)
#Plot regression line
abline(lm(Hwt~Bwt,data=cat_data),col='red')
#Scatter plot of Cat's Body Weight v Cat's Height
plot(Bwt,Height, xlab="Cat's Body Weight (kg)", ylab="Cat's Height (cm)", main="Scatter plot of Cat's Body Weight v Cat's Height", pch=16)
#Plot regression line
abline(lm(Height~Bwt,data=cat_data),col='red')
#Scatter plot of Cat's Body Weight v Cat's Age
plot(Bwt,Age, xlab="Cat's Body Weight (kg)", ylab="Cat's Age (years)", main="Scatter plot of Cat's Body Weight v Cat's Age", pch=16)
#Plot regression line
abline(lm(Age~Bwt,data=cat_data),col='red')
#Scatter plot of Cat's Heart Weight v Cat's Height
plot(Hwt,Height, xlab="Cat's Heart Weight (g)", ylab="Cat's Height (cm)", main="Scatter plot of Cat's Heart Weight v Cat's Height", pch=16)
#Plot regression line
abline(lm(Height~Hwt,data=cat_data),col='red')
#Scatter plot of Cat's Heart Weight v Cat's Age
plot(Hwt,Age, xlab="Cat's Heart Weight (g)", ylab="Cat's Age (years)", main="Scatter plot of Cat's Heart Weight v Cat's Age", pch=16)
#Plot regression line
abline(lm(Age~Hwt,data=cat_data),col='red')
#Scatter plot of Cat's Height v Cat's Age
plot(Height,Age, xlab="Cat's Height (cm)", ylab="Cat's Age (years)", main="Scatter plot of Cat's Height v Cat's Age", pch=16)
#Plot regression line
abline(lm(Age~Height,data=cat_data),col='red')
#Correlation Matrix
cor(cat_data[,c("Hwt","Bwt", "Height", "Age")])
panel.cor <- function(x, y, digits = 2, prefix = "",
cex.cor, ...)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- cor(x, y, use="complete.obs")
txt <- format(c(r, 0.123456789),
digits = digits)[1]
txt <- paste0(prefix, txt)
if(missing(cex.cor)) cex.cor <- 0.8/strwidth(txt)
text(0.5, 0.5, txt, cex = cex.cor * (abs(r)+0.15))
}
pairs(~Hwt+Bwt+Height+Age,cat_data, upper.panel = panel.smooth, lower.panel= panel.cor)
pairs(~Hwt+Bwt+Height+Age,cat_data, upper.panel = panel.smooth)
#Boxplot of Cat's Heart Weight by Sex
MaleHwt <- Hwt[Sex==1]
MaleHwt
summary(MaleHwt)
FemaleHwt <- Hwt[Sex==2]
FemaleHwt
summary(FemaleHwt)
boxplot(MaleHwt, FemaleHwt, names = c("Male Cat", "Female Cat"), main="Comparing Heart Weight's of Male and Female Cats", ylab="Heart Weight (g)", col=c(4,2))
#Boxplot of Cat's Heart Weight by Cat's Outdoor Categories
AlwaysHwt <- Hwt[Outdoor==1]
AlwaysHwt
summary(AlwaysHwt)
FreqHwt <- Hwt[Outdoor==2]
FreqHwt
summary(FreqHwt)
NeverHwt <- Hwt[Outdoor==3]
NeverHwt
summary(NeverHwt)
boxplot(AlwaysHwt, FreqHwt, NeverHwt, names = c("Always Outdoors", "Frequently Outdoors", "Never Outdoors"), main="Comparing Heart Weight's by Cat's Outdoor Categories", ylab="Heart Weight (g)", col=c(4,2,3))
res1 <- aov(Hwt~as.factor(Outdoor), data = cat_data)
par(mfrow=c(2,1))
plot(res1, which=1:2)
summary(res1)
boxplot(Hwt~Sex+Outdoor,data=cat_data, ylab="Heart Weight (g)")
print(boxplot(Hwt~Sex+Outdoor,data=cat_data, main="Comparing Heart Weight with Sex and Outdoor Status", xlab="Sex (1=Male, 2=Female) : Outdoor (1=Always, 2=Frequently, 3=Never)", ylab="Heart Weight (g)"))
#Interaction Plot
interaction.plot(x.factor = Sex,
trace.factor = Outdoor,
response = Hwt,
fun = mean, trace.label ="Outdoor",
type = "b", legend = TRUE,
main="Interaction Plot",xlab = "Sex", ylab="Heart Weight (g)",
pch=c(1,2),col=c(1,2))
res2<-aov(Hwt~as.factor(Outdoor)*as.factor(Sex),data=cat_data)
par(mfrow=c(2,1))
plot(res2, which=1:2)
plot(res2, which=4:5)
#Check if the data is balanced
addmargins(table(Outdoor,Sex))
#The data appears to be unbalanced as there is nearly twice as much males than females
Anova(res2, type = "2")
hist(Bwt)
#Cat's body weight does NOT appear to be symmetric.
hist(Height)
#Cat's height appears to be roughly symmetric and has a normal distribution.
hist(Age)
#Pearson
#H0: No Linear relationship between cat's heart weight and height, i.e. r_population correlation = 0
#H1: There is Linear relationship between cat's heart weight and height, i.e. r_population correlation != 0
cor.test(Hwt,Height)
#H0: No Linear relationship between cat's heart weight and age, i.e. r_population correlation = 0
#H1: There is Linear relationship between cat's heart weight and age, i.e. r_population correlation != 0
cor.test(Hwt,Age)
#Kendall
#Using Kendall method as seen from the histogram of body weight it appears that it is not normally distributed.
#H0: No Linear relationship between cat's heart weight and body weight, i.e. r_population correlation = 0
#H1: There is Linear relationship between cat's heart weight and body weight, i.e. r_population correlation != 0
cor.test(Hwt, Bwt, method = "kendall")
#MODEL1 = cat's heart weight and cat's body weight
#Treating cat's heart weight as response variable
plot(Hwt~Bwt)
#lm(y~x)
slr_Hwt_Bwt = lm(Hwt~Bwt)
slr_Hwt_Bwt
#Check Assumptions
plot(slr_Hwt_Bwt,which=1)
#Random scatter => iid assumption
#Spread is consistent => equal variance assumption
plot(slr_Hwt_Bwt,which=2)
#Straight line therefore residuals are normal. Meets normality assumption.
plot(slr_Hwt_Bwt,which=4)
plot(slr_Hwt_Bwt,which=5)
summary(slr_Hwt_Bwt)
plot(Hwt~Bwt)
abline(slr_Hwt_Bwt,col=2)
#MODEL2 = cat's heart weight and cat's height
#Treating cat's heart weight as response variable
plot(Hwt~Height)
#lm(y~x)
slr_Hwt_Height = lm(Hwt~Height)
slr_Hwt_Height
#Check Assumptions
plot(slr_Hwt_Height,which=1)
#Random scatter => iid assumption
#Spread is consistent => equal variance assumption
plot(slr_Hwt_Height,which=2)
#Straight line but there is a slight tail at the end, but we are happy enough with it to say that it meets our normality assumption.
plot(slr_Hwt_Height,which=4)
plot(slr_Hwt_Height,which=5)
summary(slr_Hwt_Height)
plot(Hwt~Height)
abline(slr_Hwt_Height,col=2)
#MODEL3 = cat's heart weight and cat's age
#Treating cat's heart weight as response variable
plot(Hwt~Age)
#lm(y~x)
slr_Hwt_Age = lm(Hwt~Age)
slr_Hwt_Age
#Check Assumptions
plot(slr_Hwt_Age,which=1)
#Random scatter => iid assumption
#Spread is consistent => equal variance assumption
plot(slr_Hwt_Age,which=2)
#Straight line therefore residuals are normal. Meets normality assumption.
plot(slr_Hwt_Age,which=4)
plot(slr_Hwt_Age,which=5)
summary(slr_Hwt_Age)
plot(Hwt~Age)
abline(slr_Hwt_Age,col=2)
lm1<-lm(Hwt~Bwt+Height+Age,data=cat_data)
#Open 2 visualizations in 1 graph
# 2 Rows and 1 Column
par(mfrow=c(2,1))
plot(lm1,which=1:2)
#Interpret Residuals vs Fitted
#The spread appears to be roughly the same so we are happy with our equal variance assumption.
#The scatter seems randomly distributed, so we are happy with our iid assumption.
#Interpret Normal Q-Q Plot
#The points fall in a straight line indicating that the residuals are normally distributed.
plot(lm1,which=4:5)
#No outliers or high leverage points
summary(lm1)
#Adding Sex and Outdoor categories because they have a relationship with Cat's Heart Weight and may improve our first multiple linear regression model.
lm2<-lm(Hwt~Bwt+Height+Age+as.factor(Sex)+as.factor(Outdoor),data=cat_data)
par(mfrow=c(2,1))
plot(lm2,which=1:2)
#Interpret Residuals vs Fitted
#The spread appears to be roughly the same so we are happy with our equal variance assumption.
#The scatter seems randomly distributed, so we are happy with our iid assumption.
#Interpret Normal Q-Q Plot
#The points fall in a straight line indicating that the residuals are normally distributed.
plot(lm2,which=4:5)
#No outliers or high leverage points
#There is no need to run variance inflation factor  as we have proven relationships between all variables and cat's heart weight
vif(lm2)
summary(lm2)
#F-test
#H0: The first multiple linear regression model without sex and outdoor is the preferred model
#H1: The last multiple linear regression model with sex and outdoor is the preferred model
anova(lm1,lm2)
#As the p-value = 0.01416 which is less than 0.05 we reject the null hypothesis.
#We can conclude that adding at least sex or outdoor to the model improves the fit of the model.
AIC(lm1,lm2)
BIC(lm1,lm2)
#Likelihood Ratio Test
install.packages("lmtest")
install.packages("lmtest")
library(lmtest)
lrtest(lm2, lm1)
lrtest(lm2, lm1)
#Hwt = 0.34088 + 2.80654(Bwt) + 0.05686(Height) + 0.06803(Age) + -0.44678(Sex) + 0.39979(Outdoor) + 1.25937(Outdoor)
AnsHwt1 = 0.34088 + (2.80654 * 2.6) + (0.05686 * 23.5) + (0.06803 * 10) + (-0.44678 * 2) + (0.39979 * 2) + (1.25937 * 2)
AnsHwt1
#ANS: 12.07915
AHwt1 <- 11.2
#Difference between actual and predicted cat's heart weight
Diff1 <- AHwt1-AnsHwt1
Diff1
AnsHwt2 = 0.34088 + (2.80654 * 3.1) + (0.05686 * 25.4) + (0.06803 * 13.2) + (-0.44678 * 1) + (0.39979 * 2) + (1.25937 * 2)
AnsHwt2
#ANS: 14.25493
AHwt2 <- 12.5
Diff2 <- AHwt2-AnsHwt2
Diff2
#ANS = -1.754934
#ANS = -1.754934
#ANS = -1.754934
#ANS = -1.754934
#ANS = -1.754934
#ANS = -1.754934
#ANS = -1.754934
#ANS = -1.754934
#ANS = -1.754934
#ANS = -1.754934
#ANS = -1.754934
#ANS = -1.754934
#ANS = -1.754934
#ANS = -1.754934
#ANS = -1.754934
---
title: "CA2 Ionosphere Data"
---
title: "CA2 Ionosphere Data"
---
title: "CA2 Ionosphere Data"
knitr::opts_chunk$set(echo = TRUE)
#Libraries
library(rpart) #to run decision tree
library(rpart.plot) #to plot decision tree
library(gbm)
library(randomForest)
library(ipred)
library(caret) #to get the confusion matrix
library(pROC) #to get the ROC Curve
#install.packages('mlbench')
library(mlbench) #to get the Ionosphere dataset
library(e1071) #to use svm
data(Ionosphere)
head(Ionosphere)
str(Ionosphere)
help(Ionosphere)
#Creating new data frame so we do not over write the original data frame
Ionosphere_Data <- Ionosphere
variance <- apply(Ionosphere_Data[ , -ncol(Ionosphere_Data)], 2, var)
variance
#Excluding V2 as it has no variance
Ionosphere_Data$V2 <- NULL
#Converting V1 to numeric
Ionosphere_Data$V1 <- as.numeric(Ionosphere_Data$V1)
head(Ionosphere_Data)
str(Ionosphere_Data)
knitr::opts_chunk$set(echo = TRUE)
set.seed(153)
n_train <- round(0.7 * nrow(Ionosphere_Data))
#Create a vector of indices which is an 80% random sample
train_indices <- sample(1:nrow(Ionosphere_Data), n_train)
#Subset the credit data frame to training indices only
Ionosphere_train <- Ionosphere_Data[train_indices, ]
#Exclude the training indices to create the test set
Ionosphere_test <- Ionosphere_Data[-train_indices, ]
model <- rpart(formula = Class ~ .,
data = Ionosphere_train,
method = "class")
print(model)
#Calculate variable importance in the model
varImp(model)
#V10 to V32 are of low importance in this model
var_info=varImp(model)
barplot(var_info$Overall,horiz =TRUE, names.arg = row.names(var_info),xlab="Relative influence",cex.names=0.7)
#Diagram of Classification Decision Tree
fit <- rpart.plot(x = model,
type = 3, extra = 0,
box.palette = "Greens",
fallen.leaves = TRUE)
fit
print(model)
#There are 5 terminal nodes
#Generate predicted classes for test data using the model
class_pred <- predict(object = model,  newdata = Ionosphere_test, type =
"class")
#Create confusion matrix with positive set to good
confusionMatrix(data = class_pred,  reference = Ionosphere_test$Class, positive =
"good")
#Accuracy : 0.8667
#Sensitivity : 0.9394
#Specificity : 0.7436
#Generate predicted probabilities for bad, good using the model
levels(Ionosphere_Data$Class)
tree_preds_prob <- predict(model, Ionosphere_test,
type="prob")[, 2] #Probability of predicting 'good'
ROC <- roc(Ionosphere_test$Class, tree_preds_prob,
levels=c("bad","good"))
#Plot the ROC curve
plot(ROC, col = 'blue', main = "ROC Curve / Decision Tree Model")
legend("bottomright",fill = c("blue"),
legend = c(paste("AUC = ",round(ROC$auc,3))),
cex = 0.9)
#Calculate the area under the curve (AUC)
ROC$auc
#Area under the curve: 0.8619
bagged_model <- bagging(formula = Class ~ .,
data = Ionosphere_train,
coob = TRUE)
varImp(bagged_model)
print(bagged_model)
var_info=varImp(bagged_model)
barplot(var_info$Overall,horiz =TRUE, names.arg = row.names(var_info),xlab="Relative influence",cex.names=0.7)
install.packages("car")
